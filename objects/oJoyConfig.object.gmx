<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>status = 0;
joy = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>joyReleased = false;
joyPressed = false;

joyKey = checkJoyButton();

if (joy) {
    if (joyKey != 0) {
        joy = true;
    } else{
        joyReleased = true;
        joy = false;
    }
} else {
    if (joyKey != 0) {
        joyPressed = true;
        joy = true;
    } else {
        joy = false;
    }
}

if (joyPressed) {
    if (status == 0) {
        global.joyJumpVal = joyKey;
    } else if (status == 1) {
        global.joyAttackVal = joyKey;
    } else if (status == 2) {
        global.joyItemVal = joyKey;
    } else if (status == 3) {
        global.joyRunVal = joyKey;
    } else if (status == 4) {
        global.joyBombVal = joyKey;
    } else if (status == 5) {
        global.joyRopeVal = joyKey;
    } else if (status == 6) {
        global.joyPayVal = joyKey;
    } else if (status == 7) {
        global.joyStartVal = joyKey;
    }
}

if (joyPressed or keyboard_check_pressed(vk_escape)) {
    status += 1;
    if (gamepad.attackPressed) gamepad.attackPressed = false;
    if (gamepad.startPressed) gamepad.startPressed = false;
    if (status &gt; 7) room_goto(rTitle);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>joySave();
audio_resume_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(global.fontSmall);
draw_set_color(c_yellow);
strLen = string_length(tr("PRESS BUTTON FOR"))*global.fontSmallWidth;
n = 160 - strLen;
n = ceil(n / 2);
draw_text(n, 32, tr("PRESS BUTTON FOR"));
draw_text(8, 96, tr("ESC TO KEEP SAME."));
draw_text(8, 104, tr("CURRENT: "));
draw_text(8, 120, string("Gamepad: ")+gamepad_get_description(global.joyid));

if ((!gamepad_is_connected(global.joyid)) and 
        (string_length(gamepad_get_description(global.joyid)) &lt; 1)) {
    draw_set_color(c_red);
    draw_text(8, 88, tr("NO GAMEPAD FOUND!"));
}

if (status == 0) {
    draw_set_font(global.fontLarge);
    draw_set_color(c_white);
    strLen = string_length(tr("JUMP"))*global.fontLargeWidth;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, tr("JUMP"));
    currVal = global.joyJumpVal;
} else if (status == 1) {
    draw_set_font(global.fontLarge);
    draw_set_color(c_white);
    strLen = string_length(tr("ACTION"))*global.fontLargeWidth;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, tr("ACTION"));
    currVal = global.joyAttackVal;
} else if (status == 2) {
    draw_set_font(global.fontLarge);
    draw_set_color(c_white);
    strLen = string_length(tr("SWITCH"))*global.fontLargeWidth;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, tr("SWITCH"));
    currVal = global.joyItemVal;
} else if (status == 3) {
    draw_set_font(global.fontLarge);
    draw_set_color(c_white);
    strLen = string_length(tr("RUN"))*global.fontLargeWidth;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, tr("RUN"));
    currVal = global.joyRunVal;
} else if (status == 4) {
    draw_set_font(global.fontLarge);
    draw_set_color(c_white);
    strLen = string_length(tr("BOMB"))*global.fontLargeWidth;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, tr("BOMB"));
    currVal = global.joyBombVal;
} else if (status == 5) {
    draw_set_font(global.fontLarge);
    draw_set_color(c_white);
    strLen = string_length(tr("ROPE"))*global.fontLargeWidth;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, tr("ROPE"));
    currVal = global.joyRopeVal;
} else if (status == 6) {
    draw_set_font(global.fontLarge);
    draw_set_color(c_white);
    strLen = string_length(tr("PURCHASE"))*global.fontLargeWidth;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, tr("PURCHASE"));
    currVal = global.joyPayVal;
} else if (status == 7) {
    draw_set_font(global.fontLarge);
    draw_set_color(c_white);
    strLen = string_length(tr("START"))*global.fontLargeWidth;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, tr("START"));
    currVal = global.joyStartVal;
}

draw_set_font(global.fontSmall);
draw_text(80, 104, scrGetJoy(currVal));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
